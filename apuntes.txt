Bueno..

Estaria bueno usar Python que es bastante simple, en su defecto se puede hacer en java tambien. Lo que tenemos es 
ANTLR que construye parser a partir de una gramatica LL(1) y nos da el codigo en python, java o algunos otros.

En principio (creo que esta bien) la gramatica que dieron en el enunciado sin ambiguedad seria:

y = lambda 

expr -> concat expr'
expr' -> '|'expr | y

concat -> rep concat'
concat' -> concat | y

rep -> atom rep'
rep' -> '*' | '+' | '?' | y

atom -> caracter | '('expr')'

caracter -> 'a'..'z' | 'A'..'Z' | '0'..'9' | '.' | ' '


Revisenlo... XD

ANTL

expr : concat ('|'concat)*;

concat : rep+;

rep : atom ('*' | '+' | '?')?;

atom : caracter | '('expr')';

caracter : 'a'..'z' | 'A'..'Z' | '0'..'9' | '.' | ' ';

No me funciona bien el 'a'..'z' asi que ahora esta todo expandido.